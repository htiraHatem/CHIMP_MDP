digraph {
 size="18,11";
"4" [label="{[crossLinked(corner1,table2), has(appetizer), ~agent_at(southTable), crossLinked(corner2,table2), crossLinked(northTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), agent_at(table2), crossLinked(southTable,corner2), connected(northTable,cup), crossLinked(southTable,table2), crossLinked(northTable,corner1)]} (r:1.0 ) "];
"6" [label="{[crossLinked(corner1,table2), has(appetizer), ~agent_at(southTable), crossLinked(corner2,table2), crossLinked(northTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), agent_at(table2), crossLinked(southTable,corner2), connected(northTable,cup), ~agent_at(corner2), crossLinked(southTable,table2), crossLinked(northTable,corner1)]} (r:1.0 ) "];
"9" [label="{[crossLinked(corner1,table2), crossLinked(corner2,table2), crossLinked(northTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), agent_at(table2), crossLinked(southTable,corner2), connected(northTable,cup), has(cup), ~agent_at(northTable), crossLinked(southTable,table2), crossLinked(northTable,corner1)]} (r:1.0 ) "];
"11" [label="{[crossLinked(corner1,table2), crossLinked(corner2,table2), crossLinked(northTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), agent_at(table2), crossLinked(southTable,corner2), connected(northTable,cup), has(cup), ~agent_at(northTable), ~agent_at(corner1), crossLinked(southTable,table2), crossLinked(northTable,corner1)]} (r:1.0 ) "];
"0" [label="{[crossLinked(corner1,table2), crossLinked(southTable,corner2), connected(northTable,cup), agent_at(counter), crossLinked(corner2,table2), crossLinked(northTable,table2), crossLinked(southTable,table2), connected(southTable,appetizer), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"1" [label="{[crossLinked(corner1,table2), crossLinked(southTable,corner2), connected(northTable,cup), agent_at(counter), crossLinked(corner2,table2), crossLinked(northTable,table2), crossLinked(southTable,table2), connected(southTable,appetizer), has(tray), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"2" [label="{[crossLinked(corner1,table2), crossLinked(southTable,corner2), connected(northTable,cup), crossLinked(corner2,table2), crossLinked(northTable,table2), agent_at(southTable), crossLinked(southTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"3" [label="{[crossLinked(corner1,table2), crossLinked(southTable,corner2), has(appetizer), connected(northTable,cup), crossLinked(corner2,table2), crossLinked(northTable,table2), agent_at(southTable), crossLinked(southTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"5" [label="{[crossLinked(corner1,table2), has(appetizer), ~agent_at(southTable), crossLinked(corner2,table2), crossLinked(northTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), crossLinked(southTable,corner2), connected(northTable,cup), crossLinked(southTable,table2), crossLinked(northTable,corner1), agent_at(corner2)]} (reward:-0.04 ) "];
"7" [label="{[crossLinked(corner1,table2), crossLinked(southTable,corner2), connected(northTable,cup), agent_at(northTable), crossLinked(corner2,table2), crossLinked(northTable,table2), crossLinked(southTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"8" [label="{[crossLinked(corner1,table2), crossLinked(southTable,corner2), connected(northTable,cup), agent_at(northTable), has(cup), crossLinked(corner2,table2), crossLinked(northTable,table2), crossLinked(southTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"10" [label="{[crossLinked(corner1,table2), crossLinked(corner2,table2), crossLinked(northTable,table2), connected(southTable,appetizer), ~agent_at(counter), has(tray), crossLinked(southTable,corner2), agent_at(corner1), connected(northTable,cup), has(cup), ~agent_at(northTable), crossLinked(southTable,table2), crossLinked(northTable,corner1)]} (reward:-0.04 ) "];
"0" -> "1" [ label="getObject(tray) (ProbTrans : 1,00)" ];
"1" -> "2" [ label="moveTo(counter,southTable) (ProbTrans : 1,00)" ];
"1" -> "7" [ label="moveTo(counter,northTable) (ProbTrans : 1,00)" ];
"2" -> "3" [ label="getObject(appetizer) (ProbTrans : 1,00)" ];
"3" -> "4" [ label="moveTo(southTable,table2) (ProbTrans : 1,00)" ];
"3" -> "5" [ label="moveTo(southTable,corner2) (ProbTrans : 1,00)" ];
"5" -> "6" [ label="moveTo(corner2,table2) (ProbTrans : 1,00)" ];
"7" -> "8" [ label="getObject(cup) (ProbTrans : 1,00)" ];
"8" -> "9" [ label="moveTo(northTable,table2) (ProbTrans : 1,00)" ];
"8" -> "10" [ label="moveTo(northTable,corner1) (ProbTrans : 1,00)" ];
"10" -> "11" [ label="moveTo(corner1,table2) (ProbTrans : 1,00)" ];
}
